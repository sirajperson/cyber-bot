identify_cipher_task:
  description: >
    Analyze the provided CyberSkyline module data ('crawl_data') for a cryptography challenge.
    Examine the ciphertext, hints in the description, VLM markdown, and screenshots.
    Identify the specific type of encryption or encoding used. Consider previous feedback ('feedback') if applicable.
  expected_output: >
    The identified name of the cipher or encoding scheme (e.g., "Vigenere Cipher", "Base64 Encoding",
    "AES Encryption - ECB Mode suspected"). Include brief reasoning based on evidence.

develop_decryption_plan_task:
  description: >
    Based on the identified cipher from the previous task, create a step-by-step plan to decrypt
    the ciphertext and recover the flag. Suggest specific tools (like CyberChef with recipe, Python code,
    command-line utilities) or techniques. Use the context from 'crawl_data' and incorporate 'feedback' if provided.
  expected_output: >
    A clear, numbered step-by-step decryption plan.
    Example:
    1. The identified cipher is Vigenere.
    2. Use an online tool like dcode.fr's Vigenere solver.
    3. Paste the ciphertext into the tool.
    4. Attempt automatic key guessing or use known keyword hints from the challenge text.
    5. The resulting plaintext should contain the flag.

validate_crypto_plan_task:
  description: >
    Review the proposed decryption plan ('analysis_text') which includes the cipher identification and steps.
    Verify if the cipher identification is consistent with the ciphertext characteristics (e.g., character set, patterns).
    Check if the proposed decryption steps and tools are appropriate for the identified cipher.
  expected_output: >
    A JSON object adhering to the 'AnalysisVerification' Pydantic model, containing:
    - 'valid': boolean (True if the plan is sound, False otherwise).
    - 'feedback': string (Specific, actionable feedback if 'valid' is False, otherwise None or empty).
    Example valid: {"valid": true, "feedback": null}
    Example invalid: {"valid": false, "feedback": "Feedback: The text is identified as Caesar cipher, but frequency analysis suggests Vigenere. The plan needs to use a Vigenere solver, not just shift letters."}