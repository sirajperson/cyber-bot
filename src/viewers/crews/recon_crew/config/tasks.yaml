plan_recon_task:
  description: >
    Based on the CyberSkyline challenge described in 'crawl_data' (target IP/domain, objectives),
    create a step-by-step reconnaissance plan. Specify which tools (nmap, gobuster, nikto, etc.)
    should be used and provide the exact command-line arguments for each step. Ensure the plan
    is logical (e.g., port scan first). Incorporate previous feedback ('feedback') if available.
  expected_output: >
    A numbered, step-by-step reconnaissance plan including specific commands.
    Example:
    1. Perform a basic TCP port scan of the target IP: `nmap -p- --min-rate 1000 <TARGET_IP>`
    2. If port 80/443 is open, enumerate web directories: `gobuster dir -u http://<TARGET_IP> -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt`
    3. If a web server is found, run a vulnerability scan: `nikto -h http://<TARGET_IP>`

validate_recon_plan_task:
  description: >
    Review the proposed reconnaissance plan ('analysis_text'). Check the logical order of operations
    (e.g., port scan before service-specific scans). Verify the correctness and appropriateness of
    the chosen tools and command-line arguments for the described target and goals.
  expected_output: >
    A JSON object adhering to the 'AnalysisVerification' Pydantic model, containing:
    - 'valid': boolean (True if the plan is logical and correct, False otherwise).
    - 'feedback': string (Specific, actionable feedback if 'valid' is False, otherwise None or empty).
    Example valid: {"valid": true, "feedback": null}
    Example invalid: {"valid": false, "feedback": "Feedback: The plan suggests running Nikto before Nmap. A port scan must be done first to confirm a web server is running on the target. Please reorder the steps."}